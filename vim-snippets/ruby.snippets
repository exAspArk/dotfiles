snippet froz
	frozen_string_literal: true

snippet req
	require '${1}'

snippet class
abbr    class ... end
options head
	class ${1:`substitute(expand('%:t:r:r:r'), '\v%(^(.)|_(.))', '\u\1\u\2', 'g')`}
		${2}
	end

snippet module
abbr    module ... end
options head
	module ${1:`substitute(expand('%:t:r:r:r'), '\v%(^(.)|_(.))', '\u\1\u\2', 'g')`}
		${2}
	end

snippet def
abbr    def ... end
options head
	def ${1:#:method_name}
		${2}
	end

snippet priv
abbr    private
	privatprivate
	${0}

snippet if
abbr    if ... end
options head
	if ${1:#:condition}
		${2}
	end

snippet unless
abbr    unless ... end
options head
	unless ${1:#:condition}
		${2}
	end

snippet do
abbr    do |i| ... end
	do |${1:#:i}|
		${2:$1}
	end

snippet ->
abbr    -> { ... }
	-> { ${1} }

snippet ->(
abbr    ->(i) { ... }
	->(${1:#:i}) { ${2:$1} }

snippet case
abbr    case ... when ... end
options head
	case ${1}
	when ${2}
		${3}
	end

snippet each
abbr    each { |i| ... }
options word
	each { |${1:#:i}| ${2:$1} }

snippet map
abbr    map { |i| ... }
options word
	map { |${1:#:i}| ${2:$1} }
